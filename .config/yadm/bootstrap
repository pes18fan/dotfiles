#!/bin/bash

printf "\x1b[33m------------------------------ BOOTSTRAPPER ------------------------------\x1b[0m\n"
echo ""

# Package manager inputs
read -p "Tell me your package manager. " PKG
read -p "What's $PKG's install command? E.g. pacman -S for pacman. " PKG_INSTALL
read -p "What's $PKG's update command? E.g pacman -Syu for pacman. If there
    is more than one command, for example in Ubuntu, connect them with && in the
    answer. " PKG_UPDATE

echo "Updating packages."
sudo $PKG_UPDATE
echo ""

# function that attempts to install a package if it is not already installed
# exits the program with an error if install fails
# $1: name of package in the package manager
# $2: name of installed executable
try_install() {
    if command -v $2 &> /dev/null; then
        printf "$2 is \x1b[32minstalled\x1b[0m. Skipping...\n"
        echo ""
    else
        echo "No $2. Installing..."
        if ! sudo $PKG_INSTALL $1; then
            echo ""
            printf "\x1b[31mFailed to install $1.\x1b[0m\n"
            echo "This may be due to the name of $1 being different in $PKG's repository."
            echo "If that is the case, please enter the name of the package in 
                $PKG, else enter 1 to skip this package or enter 0 to exit and try to install
                it manually. "
            read PKG_NAME
            
            case $PKG_NAME in
                0)
                    exit 1
                    ;;

                1)
                    echo "Skipping $2..."
                    ;;

                *)
                    try_install $PKG_NAME $2
                    ;;
            esac
        fi
        echo ""
    fi
}

# change default shell
change_shell() {
    if [ -n "$FISH_VERSION" ]; then
        echo "fish is already the default shell."
    else
        echo "Changing default shell to fish..."
        chsh -s $(which fish)
    fi
    echo ""
}

# No need to try install git, as it is required by yadm in the first place
try_install curl curl
try_install fish fish
try_install neovim nvim
try_install ripgrep rg
try_install fd fd
try_install eza eza
try_install bat bat

# starship
echo "Installing starship..."
curl -sS https://starship.rs/install.sh | sh

# zoxide
echo "Installing zoxide..."
curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash

# Previously when I used packer.nvim, I'd set nvim up around here.
# However, with lazy.nvim, the plugin bootstraps itself and all of your other
# plugins when you boot up nvim for the first time. Awesome!

change_shell

echo "Bootstrapping complete."
echo "Make sure to install a NerdFont for the best experience."
